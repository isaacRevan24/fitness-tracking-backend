openapi: 3.0.3
info:
  title: Open api swagger for fitness tracker
  description: Api deffinition for fitness tracker backend
  version: 1.0.0
servers:
  - url:  /v1/fitness
    description: Base path

paths:
  
  /user/sig-up:
    summary: User signup in fitness tracker database.
    description: Saves user information in fitness tracker database.
    post:
      summary: Save user in database.
      tags:
        - User
      operationId: signUp
      requestBody:
        description: request entity of signup
        content:
          "*/*":
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
        "400":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
        "500":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
  
  /user/sig-in:
    summary: User signin in fitness tracker database.
    description: Login user to fitness tracker.
    post:
      summary: Validate user.
      tags:
        - User
      operationId: signIn
      requestBody:
        description: request entity of signIn
        content:
          "*/*":
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
        "400":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
        "500":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
  
  /goals:
    summary: Add new goals for user
    description: Add weight and steps goals
    post:
      summary: Add goals
      tags:
        - Goals
      operationId: addGoals
      requestBody:
        description: request entity of addGoals
        content:
          "*/*":
            schema:
              $ref: '#/components/schemas/AddGoalsRequest'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsResponse'
        "400":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
        "500":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'

  /goals/{userId}:
    summary: Get user goals by ID
    description: Get user goals by ID
    get:
      summary: Add goals
      tags:
        - Goals
      operationId: getGoals
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalsResponse'
        "400":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'
        "500":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessResponse'

components:

  schemas:
    Status:
      description: Contiene la descripci√≥n del status del response.
      type: object
      properties:
        code:
          description: Code of message
          type: string
          example: FIT-000
        message:
          description: success
          type: string
          example: Success
    
    FitnessResponse:
      description: Generic status response for fitness tracker.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'

    SignUpRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/SignUpRequestBody'
      required:
        - body
    
    SignUpRequestBody:
      type: object
      properties:
        username:
          description: Username of the client
          type: string
          example: Aizack
        password:
          description: password with at least 1 capital letter and 1 number
          type: string
          example: Password123
        age:
          description: Age of the user
          type: integer
          example: 23
        weightMetric:
          description: specific weight metric
          type: string
          enum: 
            - kg
            - lb
        weight:
          description: specific initial weight of the user
          type: number
          example: 109.9
        heightMetric:
          description: specific height metric
          type: string
          enum:
            - mt
            - ft
        height:
          description: specific initial height of the user
          type: number
          example: 1.87
      required:
        - username
        - password
        - weightMetric
        - weight
        - height
        - heightMetric
    
    SignInRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/SignInRequestBody'
      required:
        - body

    SignInRequestBody:
      type: object
      properties:
        username:
          description: Username of the client
          type: string
          example: Aizack
        password:
          description: password with at least 1 capital letter and 1 number
          type: string
          example: Password123
      required:
        - username
        - password

    SignInResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        body:
          $ref: '#/components/schemas/SignInResponseBody'
          
    SignInResponseBody:
      type: object
      properties:
        userId:
          description: Username of the client
          type: string
          example: Aizack
    
    AddGoalsRequest:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/AddGoalsRequestBody'
      required:
        - body

    AddGoalsRequestBody:
      type: object
      properties:
        clientId:
          description: id del cliente
          type: string
          format: uuid
          example: fe2a4b2e-f67e-429d-9942-a86140abdadf
        weightGoal:
          description: weight goals
          type: number
          example: 100.00
        stepsGoal:
          description: steps goals
          type: number
          example: 12000
      required:
        - clientId
        - weightGoal
        - stepsGoal

    GoalsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        body:
          $ref: '#/components/schemas/GoalsResponseBody'
          
    GoalsResponseBody:
      type: object
      properties:
        weightGoal:
          description: weight goals
          type: number
          example: 100.00
        stepsGoal:
          description: steps goals
          type: number
          example: 12000